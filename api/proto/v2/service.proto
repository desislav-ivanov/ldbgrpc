syntax = "proto3";
package v2;

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";


option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
    info: {
      title: "GRPC LevelDB Cache API";
      version: "v2.0.0";
    };
    schemes: HTTPS;
    consumes: "application/json";
    produces: "application/json";
  };

message Status {
    enum Response {
        OK = 0;
        Error = 1;
    }
    Response code = 1;   
}

message SearchKey {
    string apiVersion = 1;
    bytes key = 2;
}

message Payload {
    string apiVersion = 1;
    bytes key = 2;
    bytes value = 3;
}

service Cache {
    rpc Get(SearchKey) returns (Payload){
        option (google.api.http) = {
            get: "/v2/cache/Get/{key}",
        };
    };
    rpc StreamGetMany(stream SearchKey) returns (stream Payload){
    };
    rpc StreamGetAll(google.protobuf.Empty) returns (stream Payload){
    };
    rpc StreamPut(stream Payload) returns (Status){
    };
    rpc Put(Payload) returns (Status) {
        option (google.api.http) = {
            put: "/v2/cache/Put/{key}",
            body: "value"
        };
    }
    rpc StreamDelete(stream SearchKey) returns (Status){
    };
    rpc Delete(SearchKey) returns (Status) {
        option (google.api.http) = {
            delete: "/v2/cache/Delete/{key}",
        };
    };
}

